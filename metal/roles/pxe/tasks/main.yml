- name: Get Docker info
  docker_host_info: {}
  register: docker_info_result

- name: Ensure Docker is running on Linux
  fail:
    msg: Docker host networking driver only works on Linux hosts, and is not supported on Docker Desktop for Mac or Windows (you can use a Linux VM with bridged networking instead)
  when:
    - docker_info_result.host_info.OperatingSystem == "Docker Desktop"

- name: Download netboot files
  ansible.builtin.get_url:
    url: "{{ netboot_url }}"
    dest: "{{ role_path }}/files/data/dl/{{ netboot_url | basename }}"
    checksum: "{{ netboot_checksum }}"
    mode: 0644
  register: netboot_archive

- name: Extract netboot archive
  ansible.builtin.unarchive:
    src: "{{ netboot_archive.dest }}"
    dest: "{{ role_path }}/files/data/netboot/"

- name: Generate dnsmasq config
  ansible.builtin.template:
    src: dnsmasq.conf.j2
    dest: "{{ role_path }}/files/data/pxe-config/dnsmasq.conf"
    mode: 0644

- name: Generate GRUB config
  ansible.builtin.template:
    src: grub.cfg.j2
    dest: "{{ role_path }}/files/data/pxe-config/grub.cfg"
    mode: 0644

- name: Generate init config for each machine
  ansible.builtin.template:
    src: preseed.cfg.j2
    dest: "{{ role_path }}/files/data/init-config/{{ hostvars[item]['mac'] }}.cfg"
    mode: 0644
  loop: "{{ groups['metal'] }}"

- name: Start the ephemeral PXE server
  community.docker.docker_compose:
    project_src: "{{ role_path }}/files"
    state: present
    build: true